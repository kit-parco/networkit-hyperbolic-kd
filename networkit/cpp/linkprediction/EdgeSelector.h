/*
 * EdgeSelector.h
 *
 *  Created on: 28.0022015
 *      Author: Kolja Esders (kolja.esders@student.kit.edu)
 */

#ifndef EDGESELECTOR_H_
#define EDGESELECTOR_H_

#include "EdgeSelector.h"

namespace NetworKit {

/**
 * @ingroup linkprediction
 * 
 */
class EdgeSelector {
private:
  const Graph& G;
  const LinkPredictor linkPredictor;

public:
  /**
   * @param G graph to operate on
   * @param linkPredictor predictor used to rank 
   */
  EdgeSelector(const Graph& G, const LinkPredictor linkPredictor);
  
  std::vector<std::pair<node, node>> selectByLimit(count limit) const;

  /**
   * Selects a vector of node-pairs whose generated scores exceed or equal the given threshold score.
   * The scores are generated by the LinkPredictor submitted during construction and the
   * selection of the threshold should consider this fact as the range of possible scores might
   * vary between link predictors.
   * 
   * @param scoreThreshold threshold used for edge selection
   * @return a vector of node-pairs where the probability of a link between the nodes exceeds or equals
   * the given threshold
   */
  //std::vector<std::pair<node, node>> selectByThreshold(double scoreThreshold) const;

};

} // namespace NetworKit

#endif /* EDGESELECTOR_H_ */